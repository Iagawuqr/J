import discord
import requests
import asyncio

TOKEN = "MTM3MjIzNDY3OTI3NjY3MDk5MA.GhJSeW.csakMe3fOMJ9BrCJQrIKjZeuw1ttuZLbuDgaW4"
CHANNEL_ID = 1409368775752417380
WEBHOOK_URL = "https://discord.com/api/webhooks/1416547550181330966/CIQpOoXvq4PMIKusB9_LBK-vaZIktf5YoXOcGxWP44NbAK_cP_8cLUA6CBIlemAcwtG3"

class SelfBot(discord.Client):
    async def on_ready(self):
        print(f"[+] Logado como {self.user} (ID: {self.user.id})")
        print(f"[+] Monitorando o canal: {CHANNEL_ID}")

    async def on_message(self, message):
        if message.author.id == self.user.id:
            return
        if message.channel.id != CHANNEL_ID:
            return

        job_id_mobile = None
        name = None
        money = None
        players = None

        # Captura campos dos embeds
        for embed in message.embeds:
            for field in embed.fields:
                if field.name in ["Job ID (Mobile)", "üÜî Job ID (Mobile)"]:
                    job_id_mobile = field.value
                elif field.name == "üè∑Ô∏è Name":
                    name = field.value
                elif field.name == "üí∞ Money per sec":
                    money = field.value
                elif field.name == "üë• Players":
                    players = field.value

        if not job_id_mobile:
            return

        # Envia para webhook
        data = {
            "username": "Sunder | Notify",
            "embeds": [
                {
                    "title": "Sunder Notify",
                    "description": f"üè∑Ô∏è Name: {name or 'N/A'}\nüí∞ Money per sec: {money or 'N/A'}\nüë• Players: {players or 'N/A'}\n\nSunder",
                    "color": 0x7289DA,
                    "fields": [
                        {
                            "name": "üÜî Job ID (Mobile)",
                            "value": f"`{job_id_mobile}`",
                            "inline": False
                        }
                    ]
                }
            ]
        }

        try:
            requests.post(WEBHOOK_URL, json=data)
            print(f"[ENVIADO] {name or 'N/A'} | Job ID Mobile: {job_id_mobile}")
        except Exception as e:
            print(f"[ERRO] {e}")

# Inicializa o cliente
client = SelfBot()

async def start_selfbot():
    await client.login(TOKEN)
    await client.connect()

asyncio.run(start_selfbot())