local redzlibContent = game:HttpGet("https://raw.githubusercontent.com/realgengar/Library/refs/heads/main/remake.lua", true)
local redzlib = loadstring(redzlibContent)()
if not redzlib then error("deu red") end

local Window = redzlib:MakeWindow({
    Title = "Drip Client Solutions | Steal brairot | English",
    SubTitle = "                  Dev < Magnus999 >",
    SaveFolder = "redz Hub | Steal brairot.lua"
})

Window:AddMinimizeButton({
	Button = {
		Image = "rbxassetid://72495850369898"
	},
	Corner = {
		CornerRadius = UDim.new(0, 2)
	},
	Stroke = {
		Color = Color3.new(0, 0, 0),
		Transparency = 1,
		Thickness = 1
	}
})

local player = game:GetService("Players").LocalPlayer
local shop = player.PlayerGui:FindFirstChild("Main") and player.PlayerGui.Main:FindFirstChild("CoinsShop")

local Tabs = {
    Updates = Window:MakeTab({"Home", Icon = "home" }),
    Main = Window:MakeTab({"Main", Icon = "flame" }),
    Esp = Window:MakeTab({"Visual", Icon = "eye" }),
    Script = Window:MakeTab({"Script", Icon = "shield" }),
    Server = Window:MakeTab({"Server", Icon = "server" }),
    Settings = Window:MakeTab({"Settings", Icon = "settings" }),
}

Tabs.Updates:AddDiscordInvite({
    Name = ("Drip Hub | Community"),
    Description = ("Junte-se à nossa comunidade discord para receber informações sobre a próxima atualização"),
    Logo = "rbxassetid://94502262507600",
    Invite = "https://discord.gg/vRStYNzwT8"
})
local function links()
    setclipboard("https://discord.gg/vRStYNzwT8")
end

Window:Dialog({
    Title = Translator:traduzir("annu"),
    Text = Translator:traduzir("discord updates scripts"),
    Options = {
        {"Discord", function()
            links()
        end}
    }
})

local gameName = "Unknown Game"

local success, gameInfo = pcall(function()
    return game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId)
end)

if success and gameInfo then
    gameName = gameInfo.Name
end

Tabs.Updates:AddSection({("Mapa Status")})
local Paragraph1 = Tabs.Updates:AddParagraph({("Nome do Jogo: " .. gameName)})
local executor = identifyexecutor()
local Paragraph = Tabs.Updates:AddParagraph({("Executor: " .. executor)})


local plotName
for _, plot in ipairs(workspace.Plots:GetChildren()) do
    if plot:FindFirstChild("YourBase", true).Enabled then
        plotName = plot.Name
        break
    end
end

local remainingTime = workspace.Plots[plotName].Purchases.PlotBlock.Main.BillboardGui.RemainingTime
Tabs.Main:AddSection({"Steal fun"})
local rtp = Tabs.Main:AddParagraph({ Title = "Lock Time: " .. remainingTime.Text })

task.spawn(function()
    while true do
        rtp:SetTitle("Lock Time: " .. remainingTime.Text)
        task.wait(0.25)
    end
end)

--== Variáveis ==--
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

local EquipLoop = false
local UltraLagLoop = false
local Dragging = false
local DragOffset = Vector2.new(0,0)
local LoopMode = "safe"
local EquipCount = 0
local UnequipCount = 0

--== Funções principais ==--
local function stripCharacter()
    local character = LocalPlayer.Character
    if not character then return end
    for _, child in pairs(character:GetChildren()) do
        if child:IsA("Accessory") or child:IsA("Shirt") or child:IsA("Pants") then
            child:Destroy()
        end
    end
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.BodyHeightScale.Value = 0.7
        humanoid.BodyWidthScale.Value = 0.7
        humanoid.BodyDepthScale.Value = 0.7
        humanoid.HeadScale.Value = 0.7
    end
end

local function toggleToolLoop(tool)
    EquipLoop = true
    local character = LocalPlayer.Character
    if not character or not tool then return end
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if not humanoid then return end
    if LoopMode == "ultra" then
        local connection
        connection = RunService.RenderStepped:Connect(function()
            if not EquipLoop then if connection then connection:Disconnect() end return end
            if tool.Parent ~= character then
                tool.Parent = LocalPlayer.Backpack
                UnequipCount = UnequipCount + 1
            end
            humanoid:EquipTool(tool)
            EquipCount = EquipCount + 1
            _G.UpdateCounter()
        end)
        return
    end
    while EquipLoop do
        if tool.Parent ~= character then
            tool.Parent = LocalPlayer.Backpack
            UnequipCount = UnequipCount + 1
        end
        humanoid:EquipTool(tool)
        EquipCount = EquipCount + 1
        _G.UpdateCounter()
        if LoopMode == "safe" then
            task.wait(0.1)
        elseif LoopMode == "turbo" then
            task.wait()
        end
    end
end

local function ultraLagLoop()
    UltraLagLoop = true
    local player = Players.LocalPlayer
    local connection
    connection = RunService.RenderStepped:Connect(function()
        if not UltraLagLoop then
            if connection then connection:Disconnect() end
            return
        end
        local tools = {}
        for _, tool in ipairs(player.Backpack:GetChildren()) do
            if tool:IsA("Tool") then table.insert(tools, tool) end
        end
        if player.Character then
            for _, tool in ipairs(player.Character:GetChildren()) do
                if tool:IsA("Tool") then table.insert(tools, tool) end
            end
        end
        for _, t in ipairs(workspace:GetChildren()) do
            if t:IsA("Tool") and t:FindFirstChild("Handle") then
                pcall(function() t.Parent = player.Backpack end)
            end
        end
        if player.Character then
            local hum = player.Character:FindFirstChildWhichIsA("Humanoid")
            if hum then
                for _, tool in ipairs(tools) do
                    if tool and tool.Parent == player.Backpack then
                        hum:EquipTool(tool)
                    end
                end
            end
        end
    end)
end

local function runAutoEquip()
    local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    stripCharacter()
    repeat task.wait() until character:FindFirstChild("HumanoidRootPart")
    EquipCount = 0
    UnequipCount = 0
    _G.UpdateCounter()
    local tool = character:FindFirstChildWhichIsA("Tool")
    if not tool then
        showNotification(T("NOTIF_NEED_TOOL"), 2.2)
        EquipLoop = false
        return
    end
    spawn(function() toggleToolLoop(tool) end)
end

local Toggle = Tabs.Main:AddToggle({
    Name = "Lags Tool <Server>",
    Description = "Ativa o modo Ultra Lag",
    Default = false
})

Toggle:Callback(function(Value)
    if Value then
        UltraLagLoop = true
        ultraLagLoop()
    else
        UltraLagLoop = false
    end
end)

Tabs.Main:AddButton({
    Title = "Steal",
    Description = "Spam if not working (teleports you to middle)",
    Callback = function()
        local player = game.Players.LocalPlayer
        local pos = CFrame.new(0, -500, 0)
        local startT = os.clock()
        while os.clock() - startT < 1 do
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                player.Character.HumanoidRootPart.CFrame = pos
            end
            task.wait()
        end
    end
})
local Button = Tabs.Main:AddButton({"Steal Part", function()
local creatingPlatform = false
local platformModel = nil

local player = game.Players.LocalPlayer
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "CustomPlatformGui"
screenGui.ResetOnSpawn = false

-- Frame principal
local mainFrame = Instance.new("Frame", screenGui)
mainFrame.Size = UDim2.new(0, 250, 0, 150)
mainFrame.Position = UDim2.new(0.5, -125, 0.5, -75)
mainFrame.BackgroundColor3 = Color3.fromRGB(128, 0, 128) -- Roxo
mainFrame.BackgroundTransparency = 0.4
mainFrame.BorderSizePixel = 0
mainFrame.Active = true

-- Borda arredondada do Frame
local frameCorner = Instance.new("UICorner", mainFrame)
frameCorner.CornerRadius = UDim.new(0, 12)

-- Botão Criar Plataforma
local createButton = Instance.new("TextButton", mainFrame)
createButton.Size = UDim2.new(0.8, 0, 0.3, 0)
createButton.Position = UDim2.new(0.1, 0, 0.2, 0)
createButton.Text = "Criar Plataforma"
createButton.BackgroundColor3 = Color3.fromRGB(180, 0, 180)
createButton.TextColor3 = Color3.new(1, 1, 1)
createButton.Font = Enum.Font.GothamBold
createButton.TextScaled = true

local createCorner = Instance.new("UICorner", createButton)
createCorner.CornerRadius = UDim.new(0, 8)

-- Botão Excluir Plataforma
local deleteButton = Instance.new("TextButton", mainFrame)
deleteButton.Size = UDim2.new(0.8, 0, 0.3, 0)
deleteButton.Position = UDim2.new(0.1, 0, 0.6, 0)
deleteButton.Text = "Excluir Plataforma"
deleteButton.BackgroundColor3 = Color3.fromRGB(100, 0, 100)
deleteButton.TextColor3 = Color3.new(1, 1, 1)
deleteButton.Font = Enum.Font.GothamBold
deleteButton.TextScaled = true

local deleteCorner = Instance.new("UICorner", deleteButton)
deleteCorner.CornerRadius = UDim.new(0, 8)

-- Função para criar plataforma na altura atual do jogador
local function spawnPlatform()
    if not creatingPlatform then return end

    if platformModel then platformModel:Destroy() end

    local rootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if not rootPart then return end

    platformModel = Instance.new("Part")
    platformModel.Size = Vector3.new(10, 1, 10)
    platformModel.Position = rootPart.Position
    platformModel.Anchored = true
    platformModel.Color = Color3.fromRGB(160, 0, 160)
    platformModel.Material = Enum.Material.Neon
    platformModel.Name = "ScoutPlatform"
    platformModel.Parent = workspace
end

-- Botão Criar
createButton.MouseButton1Click:Connect(function()
    if creatingPlatform then return end
    creatingPlatform = true
    while creatingPlatform do
        spawnPlatform()
        wait(0.5)
    end
end)

-- Botão Excluir
deleteButton.MouseButton1Click:Connect(function()
    creatingPlatform = false
    if platformModel then
        platformModel:Destroy()
        platformModel = nil
    end
end)

-- 🖱️ Função de arrastar personalizada
local UIS = game:GetService("UserInputService")
local dragging = false
local dragStart, startPos

mainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

UIS.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)
end})
local Button = Tabs.Main:AddButton({"Steal Lag V2", function()
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Stats = game:GetService("Stats")
local LocalPlayer = Players.LocalPlayer
local EquipLoop = false
local UltraLagLoop = false
local Dragging = false
local DragOffset = Vector2.new(0,0)
local LoopMode = "safe"
local EquipCount = 0
local UnequipCount = 0
local function showNotification(msg, duration)
    duration = duration or 2
    local notifFrame = Instance.new("Frame")
    notifFrame.Size = UDim2.new(0, 320, 0, 74)
    notifFrame.Position = UDim2.new(1, -350, 0, 36)
    notifFrame.BackgroundColor3 = Color3.fromRGB(30, 34, 40)
    notifFrame.BackgroundTransparency = 0.1
    notifFrame.BorderSizePixel = 0
    notifFrame.AnchorPoint = Vector2.new(0,0)
    notifFrame.ZIndex = 999
    notifFrame.ClipsDescendants = true
    notifFrame.Parent = game:GetService("CoreGui"):FindFirstChildOfClass("ScreenGui") or game:GetService("CoreGui")
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = notifFrame

    local icon = Instance.new("ImageLabel")
    icon.Size = UDim2.new(0,36,0,36)
    icon.Position = UDim2.new(0,15,0,19)
    icon.BackgroundTransparency = 1
    icon.Image = "rbxassetid://7733960981"
    icon.ZIndex = 1000
    icon.Parent = notifFrame

    local notifText = Instance.new("TextLabel")
    notifText.BackgroundTransparency = 1
    notifText.Position = UDim2.new(0, 65, 0, 11)
    notifText.Size = UDim2.new(1, -80, 1, -18)
    notifText.TextColor3 = Color3.fromRGB(255,255,255)
    notifText.Font = Enum.Font.GothamBold
    notifText.TextSize = 20
    notifText.Text = msg
    notifText.TextWrapped = true
    notifText.TextXAlignment = Enum.TextXAlignment.Left
    notifText.ZIndex = 1000
    notifText.Parent = notifFrame

    notifFrame.BackgroundTransparency = 1
    notifText.TextTransparency = 1
    icon.ImageTransparency = 1
    notifFrame.Position = notifFrame.Position + UDim2.new(0, 40, 0, 0)

    for i=1,10 do
        notifFrame.BackgroundTransparency = 1 - 0.09*i
        notifText.TextTransparency = 1 - 0.09*i
        icon.ImageTransparency = 1 - 0.09*i
        notifFrame.Position = UDim2.new(1, -350 + 4*(10-i), 0, 36)
        wait(0.016)
    end
    notifFrame.BackgroundTransparency = 0.1
    notifText.TextTransparency = 0
    icon.ImageTransparency = 0
    notifFrame.Position = UDim2.new(1, -350, 0, 36)

    local notifSound = Instance.new("Sound")
    notifSound.SoundId = "rbxassetid://6026984224"
    notifSound.Volume = 0.5
    notifSound.Parent = notifFrame
    notifSound:Play()
    game:GetService("Debris"):AddItem(notifSound, 2.4)

    wait(duration)
    for i=1,10 do
        notifFrame.BackgroundTransparency = 0.1 + 0.09*i
        notifText.TextTransparency = 0 + 0.09*i
        icon.ImageTransparency = 0 + 0.09*i
        notifFrame.Position = UDim2.new(1, -350 + 2*i, 0, 36)
        wait(0.016)
    end
    notifFrame:Destroy()
end

local function stripCharacter()
    local character = LocalPlayer.Character
    if not character then return end
    for _, child in pairs(character:GetChildren()) do
        if child:IsA("Accessory") or child:IsA("Shirt") or child:IsA("Pants") then
            child:Destroy()
        end
    end
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.BodyHeightScale.Value = 0.7
        humanoid.BodyWidthScale.Value = 0.7
        humanoid.BodyDepthScale.Value = 0.7
        humanoid.HeadScale.Value = 0.7
    end
end

local function toggleToolLoop(tool)
    EquipLoop = true
    local character = LocalPlayer.Character
    if not character or not tool then return end
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if not humanoid then return end
    if LoopMode == "ultra" then
        local connection
        connection = RunService.RenderStepped:Connect(function()
            if not EquipLoop then if connection then connection:Disconnect() end return end
            if tool.Parent ~= character then
                tool.Parent = LocalPlayer.Backpack
                UnequipCount = UnequipCount + 1
            end
            humanoid:EquipTool(tool)
            EquipCount = EquipCount + 1
            _G.UpdateCounter()
        end)
        return
    end
    while EquipLoop do
        if tool.Parent ~= character then
            tool.Parent = LocalPlayer.Backpack
            UnequipCount = UnequipCount + 1
        end
        humanoid:EquipTool(tool)
        EquipCount = EquipCount + 1
        _G.UpdateCounter()
        if LoopMode == "safe" then
            task.wait(0.1)
        elseif LoopMode == "turbo" then
            task.wait()
        end
    end
end

local function ultraLagLoop()
    UltraLagLoop = true
    showNotification("ULTRA LAG ATIVADO!\nEquipando/desquipando todas as suas Tools!", 2.5)
    local player = Players.LocalPlayer
    local connection
    connection = RunService.RenderStepped:Connect(function()
        if not UltraLagLoop then 
            if connection then connection:Disconnect() end 
            showNotification("ULTRA LAG DESATIVADO!", 2) 
            return 
        end
        local tools = {}
        for _,tool in ipairs(player.Backpack:GetChildren()) do if tool:IsA("Tool") then table.insert(tools, tool) end end
        if player.Character then for _,tool in ipairs(player.Character:GetChildren()) do if tool:IsA("Tool") then table.insert(tools, tool) end end end
        for _,t in ipairs(workspace:GetChildren()) do if t:IsA("Tool") and t:FindFirstChild("Handle") then pcall(function() t.Parent = player.Backpack end) end end
        if player.Character then
            local hum = player.Character:FindFirstChildWhichIsA("Humanoid")
            if hum then
                for _, tool in ipairs(tools) do
                    if tool and tool.Parent == player.Backpack then hum:EquipTool(tool) end
                end
            end
        end
    end)
end

local function runAutoEquip()
    local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    stripCharacter()
    repeat task.wait() until character:FindFirstChild("HumanoidRootPart")
    EquipCount = 0
    UnequipCount = 0
    _G.UpdateCounter()
    local tool = character:FindFirstChildWhichIsA("Tool")
    if not tool then showNotification("Equipe a Tool para funcionar!", 2.2) EquipLoop = false return end
    spawn(function() toggleToolLoop(tool) end)
end

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "AutoToolEquipMozart"
ScreenGui.ResetOnSpawn = false
local success, hui = pcall(function() return gethui() end)
if success and hui then ScreenGui.Parent = hui else ScreenGui.Parent = game:GetService("CoreGui") end
local function addRoundedCorners(element, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius or 8)
    corner.Parent = element
end
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 340, 0, 370)
MainFrame.Position = UDim2.new(0.5, -170, 0.26, 0)
MainFrame.BackgroundColor3 = Color3.fromRGB(75, 0, 130) -- Roxo
MainFrame.BackgroundTransparency = 0.3 -- Semi-transparente
MainFrame.BorderSizePixel = 0
MainFrame.AnchorPoint = Vector2.new(0.5,0)
MainFrame.Parent = ScreenGui
MainFrame.Active = true
MainFrame.Draggable = false
MainFrame.Visible = true

addRoundedCorners(MainFrame, 15)

local Shadow = Instance.new("ImageLabel")
Shadow.Size = UDim2.new(1, 24, 1, 24)
Shadow.Position = UDim2.new(0, -12, 0, -12)
Shadow.BackgroundTransparency = 1
Shadow.Image = "rbxassetid://1316045217"
Shadow.ImageTransparency = 0.48
Shadow.ZIndex = MainFrame.ZIndex - 1
Shadow.Parent = MainFrame

MainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        Dragging = true
        DragOffset = Vector2.new(input.Position.X - MainFrame.AbsolutePosition.X, input.Position.Y - MainFrame.AbsolutePosition.Y)
    end
end)

MainFrame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        Dragging = false
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if Dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local newX = input.Position.X - DragOffset.X
        local newY = input.Position.Y - DragOffset.Y
        MainFrame.Position = UDim2.new(0, math.clamp(newX, 0, workspace.CurrentCamera.ViewportSize.X-MainFrame.Size.X.Offset), 0, math.clamp(newY, 0, workspace.CurrentCamera.ViewportSize.Y-MainFrame.Size.Y.Offset))
    end
end)

local CloseBtn = Instance.new("TextButton")
CloseBtn.Size = UDim2.new(0, 32, 0, 32)
CloseBtn.Position = UDim2.new(1, -38, 0, 8)
CloseBtn.BackgroundColor3 = Color3.fromRGB(220, 60, 60)
CloseBtn.Text = "✕"
CloseBtn.TextColor3 = Color3.new(1,1,1)
CloseBtn.TextSize = 22
CloseBtn.Font = Enum.Font.GothamBlack
CloseBtn.BorderSizePixel = 0
CloseBtn.ZIndex = 2
CloseBtn.AutoButtonColor = true
CloseBtn.Parent = MainFrame

addRoundedCorners(CloseBtn, 16)

CloseBtn.MouseButton1Click:Connect(function()
    MainFrame.Visible = false
end)


local TopBar = Instance.new("Frame")
TopBar.Size = UDim2.new(1,0,0,54)
TopBar.Position = UDim2.new(0,0,0,0)
TopBar.BackgroundTransparency = 1
TopBar.Parent = MainFrame

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1,0,0,36)
Title.Position = UDim2.new(0,0,0,4)
Title.BackgroundTransparency = 1
Title.Text = "Lag Tool Update"
Title.Font = Enum.Font.GothamBlack
Title.TextSize = 20
Title.TextColor3 = Color3.fromRGB(225, 255, 180)
Title.TextStrokeTransparency = 0.76
Title.TextWrapped = true
Title.Parent = TopBar

local Line = Instance.new("Frame")
Line.Size = UDim2.new(0.9,0,0,2)
Line.Position = UDim2.new(0.05,0,0,47)
Line.BackgroundColor3 = Color3.fromRGB(57,200,110)
Line.BorderSizePixel = 0
Line.Parent = TopBar

local y = 0.19
local y_space = 0.15

local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(0.82,0,0,38)
ToggleButton.Position = UDim2.new(0.09,0,y,0)
ToggleButton.Font = Enum.Font.GothamBlack
ToggleButton.TextSize = 16
ToggleButton.TextColor3 = Color3.fromRGB(255,255,255)
ToggleButton.BorderSizePixel = 0
ToggleButton.AutoButtonColor = false
ToggleButton.Text = "Ativar"
ToggleButton.BackgroundColor3 = Color3.fromRGB(39, 174, 96)
ToggleButton.Parent = MainFrame


addRoundedCorners(ToggleButton, 8)

local function updateToggleButton()
    ToggleButton.Text = EquipLoop and "Desativar" or "Ativar"
    ToggleButton.BackgroundColor3 = EquipLoop and Color3.fromRGB(192,57,43) or Color3.fromRGB(39, 174, 96)
end
updateToggleButton()

ToggleButton.MouseEnter:Connect(function()
    if EquipLoop then
        ToggleButton.BackgroundColor3 = Color3.fromRGB(231,76,60)
    else
        ToggleButton.BackgroundColor3 = Color3.fromRGB(46,204,113)
    end
end)
ToggleButton.MouseLeave:Connect(updateToggleButton)

ToggleButton.MouseButton1Click:Connect(function()
    if EquipLoop then
        EquipLoop = false
        updateToggleButton()
    else
        EquipLoop = true
        updateToggleButton()
        spawn(function()
            runAutoEquip()
            updateToggleButton()
        end)
    end
end)

local LoopModeButton = Instance.new("TextButton")
LoopModeButton.Size = UDim2.new(0.82,0,0,32)
LoopModeButton.Position = UDim2.new(0.09,0,y + y_space,0)
LoopModeButton.Font = Enum.Font.GothamBold
LoopModeButton.TextSize = 14
LoopModeButton.TextColor3 = Color3.fromRGB(255,255,255)
LoopModeButton.BorderSizePixel = 0
LoopModeButton.AutoButtonColor = false
LoopModeButton.Parent = MainFrame

addRoundedCorners(LoopModeButton, 8)

local function updateLoopModeButton()
    if LoopMode == "safe" then
        LoopModeButton.Text = "Modo Seguro (Recomendado)"
        LoopModeButton.BackgroundColor3 = Color3.fromRGB(52, 152, 219)
        LoopModeButton.TextColor3 = Color3.fromRGB(255,255,255)
    elseif LoopMode == "turbo" then
        LoopModeButton.Text = "Modo Turbo (Rápido)"
        LoopModeButton.BackgroundColor3 = Color3.fromRGB(241,196,15)
        LoopModeButton.TextColor3 = Color3.fromRGB(60,60,60)
    else
        LoopModeButton.Text = "Modo ULTRA (Máxima velocidade!)"
        LoopModeButton.BackgroundColor3 = Color3.fromRGB(155,89,182)
        LoopModeButton.TextColor3 = Color3.fromRGB(255,255,255)
    end
end
updateLoopModeButton()

LoopModeButton.MouseButton1Click:Connect(function()
    if LoopMode == "safe" then
        LoopMode = "turbo"
        showNotification("Modo turbo ativado!\nMuito rápido.", 2.2)
    elseif LoopMode == "turbo" then
        LoopMode = "ultra"
        showNotification("Modo ULTRA ativado!\nO mais rápido possível!", 2.3)
    else
        LoopMode = "safe"
        showNotification("Modo seguro ativado!", 2)
    end
    updateLoopModeButton()
end)
LoopModeButton.MouseEnter:Connect(function()
    if LoopMode == "safe" then
        LoopModeButton.BackgroundColor3 = Color3.fromRGB(41,128,185)
    elseif LoopMode == "turbo" then
        LoopModeButton.BackgroundColor3 = Color3.fromRGB(243,220,75)
    else
        LoopModeButton.BackgroundColor3 = Color3.fromRGB(187, 102, 255)
    end
end)
LoopModeButton.MouseLeave:Connect(updateLoopModeButton)

local UltraLagButton = Instance.new("TextButton")
UltraLagButton.Size = UDim2.new(0.82,0,0,32)
UltraLagButton.Position = UDim2.new(0.09,0,y + y_space*2 + 0.01,0)
UltraLagButton.Font = Enum.Font.GothamBlack
UltraLagButton.TextSize = 14
UltraLagButton.Text = "ULTRA LAG (TODAS AS SUAS TOOLS)"
UltraLagButton.TextColor3 = Color3.fromRGB(255,255,255)
UltraLagButton.BorderSizePixel = 0
UltraLagButton.AutoButtonColor = false
UltraLagButton.BackgroundColor3 = Color3.fromRGB(231, 76, 60)
UltraLagButton.Parent = MainFrame

addRoundedCorners(UltraLagButton, 8)

local function updateUltraLagButton()
    if UltraLagLoop then
        UltraLagButton.Text = "PARAR ULTRA LAG"
        UltraLagButton.BackgroundColor3 = Color3.fromRGB(39, 174, 96)
    else
        UltraLagButton.Text = "ULTRA LAG (TODAS AS SUAS TOOLS)"
        UltraLagButton.BackgroundColor3 = Color3.fromRGB(231, 76, 60)
    end
end
updateUltraLagButton()

UltraLagButton.MouseEnter:Connect(function()
    if UltraLagLoop then
        UltraLagButton.BackgroundColor3 = Color3.fromRGB(46,204,113)
    else
        UltraLagButton.BackgroundColor3 = Color3.fromRGB(192,57,43)
    end
end)
UltraLagButton.MouseLeave:Connect(updateUltraLagButton)

UltraLagButton.MouseButton1Click:Connect(function()
    if UltraLagLoop then
        UltraLagLoop = false
        updateUltraLagButton()
    else
        UltraLagLoop = true
        updateUltraLagButton()
        spawn(function()
            ultraLagLoop()
        end)
    end
end)

local CounterFrame = Instance.new("Frame")
CounterFrame.Size = UDim2.new(0.82,0,0,32)
CounterFrame.Position = UDim2.new(0.09,0,0.62,0)
CounterFrame.BackgroundTransparency = 0.35
CounterFrame.BackgroundColor3 = Color3.fromRGB(40, 44, 54)
CounterFrame.BorderSizePixel = 0
CounterFrame.Parent = MainFrame

addRoundedCorners(CounterFrame, 6)

local CounterLabel = Instance.new("TextLabel")
CounterLabel.Size = UDim2.new(1,0,1,0)
CounterLabel.BackgroundTransparency = 1
CounterLabel.Font = Enum.Font.GothamSemibold
CounterLabel.TextSize = 14
CounterLabel.TextColor3 = Color3.fromRGB(180, 230, 170)
CounterLabel.TextStrokeTransparency = 0.85
CounterLabel.Text = "Equip: 0   |   Desequip: 0"
CounterLabel.Parent = CounterFrame

function _G.UpdateCounter()
    CounterLabel.Text = string.format("Equip: %d   |   Desequip: %d", EquipCount, UnequipCount)
end

local PerfFrame = Instance.new("Frame")
PerfFrame.Size = UDim2.new(0.82,0,0,26)
PerfFrame.Position = UDim2.new(0.09,0,0.72,0)
PerfFrame.BackgroundTransparency = 0.5
PerfFrame.BackgroundColor3 = Color3.fromRGB(33,39,48)
PerfFrame.BorderSizePixel = 0
PerfFrame.Parent = MainFrame

addRoundedCorners(PerfFrame, 6)

local PerfLabel = Instance.new("TextLabel")
PerfLabel.Size = UDim2.new(1,0,1,0)
PerfLabel.BackgroundTransparency = 1
PerfLabel.Font = Enum.Font.GothamSemibold
PerfLabel.TextSize = 13
PerfLabel.TextColor3 = Color3.fromRGB(155, 200, 255)
PerfLabel.TextStrokeTransparency = 0.85
PerfLabel.Text = "Ping: 0 ms | FPS: 0"
PerfLabel.Parent = PerfFrame

local frameCounter, lastTime, fps = 0, tick(), 60
spawn(function()
    while PerfLabel and PerfLabel.Parent do
        frameCounter = frameCounter + 1
        if tick()-lastTime >= 1 then
            fps = frameCounter
            frameCounter = 0
            lastTime = tick()
        end
        local ping = math.floor(Stats.Network.ServerStatsItem["Data Ping"]:GetValue())
        PerfLabel.Text = string.format("Ping: %d ms | FPS: %d", ping, fps)
        task.wait(0.2)
    end
end)
RunService.RenderStepped:Connect(function() frameCounter = frameCounter + 1 end)

local Tooltip = Instance.new("TextLabel")
Tooltip.Size = UDim2.new(1,0,0,18)
Tooltip.Position = UDim2.new(0,0,0.91,0)
Tooltip.BackgroundTransparency = 1
Tooltip.Text = "Arraste a janela para movê-la"
Tooltip.Font = Enum.Font.Gotham
Tooltip.TextSize = 13
Tooltip.TextColor3 = Color3.fromRGB(180,255,180)
Tooltip.TextStrokeTransparency = 0.92
Tooltip.Parent = MainFrame


local Credits = Instance.new("TextLabel")
Credits.Size = UDim2.new(1,0,0,15)
Credits.Position = UDim2.new(0,0,0.96,0)
Credits.BackgroundTransparency = 1
Credits.Text = "Steal Brainrot"
Credits.Font = Enum.Font.GothamBold
Credits.TextSize = 13
Credits.TextColor3 = Color3.fromRGB(255,0,0)
Credits.TextStrokeTransparency = 0.8
Credits.Parent = MainFrame

spawn(function()
    local hue = 0
    while Credits and Credits.Parent do
        Credits.TextColor3 = Color3.fromHSV(hue, 0.75, 1)
        hue = (hue + 0.01) % 1
        task.wait(0.05)
    end
end)
end})
Tabs.Main:AddSection({"Velocy"})
local SpeedSlider = Tabs.Main:AddSlider({
    Name = "Speed Boost",
    Min = 0,
    Max = 6,
    Increase = 1,
    Default = 0,
    Callback = function(Value)
        currentSpeed = tonumber(Value) or 0
    end
})

local function sSpeed(character)
    local hum = character:WaitForChild("Humanoid")
    local hb = game:GetService("RunService").Heartbeat
    
    task.spawn(function()
        while character and hum and hum.Parent do
            if currentSpeed > 0 and hum.MoveDirection.Magnitude > 0 then
                character:TranslateBy(hum.MoveDirection * currentSpeed * hb:Wait() * 10)
            end
            task.wait()
        end
    end)
end

local function onCharacterAdded(character)
    sSpeed(character)
end

player.CharacterAdded:Connect(onCharacterAdded)

if player.Character then
    onCharacterAdded(player.Character)
end


Tabs.Main:AddButton({
    Title = "Invisible",
    Description = "Use Invisibility Cloak <SpeedBooster>",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local cloak = character:FindFirstChild("Invisibility Cloak")
        if cloak and cloak:GetAttribute("SpeedModifier") == 2 then
            cloak.Parent = workspace
        else
            Fluent:Notify({ Title = "Stellar", Content = "Use Invisibility Cloak First", Duration = 2 })
        end
    end
})

-- ESP

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local espEnabled = false
local espInstances = {}

local function createESP(player)
    if not espEnabled then return end
    if player == Players.LocalPlayer then return end
    
    local character = player.Character
    if not character then return end
    
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart", 10)
    if not humanoidRootPart then return end
    
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "ESP_" .. player.Name
    billboard.AlwaysOnTop = true
    billboard.Size = UDim2.new(0, 200, 0, 30)
    billboard.StudsOffset = Vector3.new(0, 3, 0)
    billboard.Adornee = humanoidRootPart
    billboard.Parent = humanoidRootPart
    
    local textLabel = Instance.new("TextLabel")
    textLabel.Name = "NameLabel"
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = player.DisplayName
    textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    textLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    textLabel.TextStrokeTransparency = 0
    textLabel.TextScaled = true
    textLabel.Font = Enum.Font.GothamBold
    textLabel.Parent = billboard
    
    espInstances[player] = billboard
    
    local function onCharacterAdded(newCharacter)
        if billboard then billboard:Destroy() end
        
        humanoidRootPart = newCharacter:WaitForChild("HumanoidRootPart", 10)
        if humanoidRootPart and espEnabled then
            billboard.Adornee = humanoidRootPart
            billboard.Parent = humanoidRootPart
        end
    end
    
    player.CharacterAdded:Connect(onCharacterAdded)
end

local function removeESP(player)
    local espInstance = espInstances[player]
    if espInstance then
        espInstance:Destroy()
        espInstances[player] = nil
    end
end

local function toggleESP(enable)
    espEnabled = enable
    if enable then
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= Players.LocalPlayer then
                coroutine.wrap(function()
                    createESP(player)
                end)()
            end
        end
    else
        for player, espInstance in pairs(espInstances) do
            if espInstance then
                espInstance:Destroy()
            end
        end
        espInstances = {}
    end
end

local function initPlayerConnections()
    Players.PlayerAdded:Connect(function(player)
        player.CharacterAdded:Connect(function(character)
            if player ~= Players.LocalPlayer and espEnabled then
                task.wait(1)
                createESP(player)
            end
        end)
    end)

    Players.PlayerRemoving:Connect(removeESP)
end

initPlayerConnections()

local RaritySettings = {
    ["Legendary"] = {
        Color = Color3.new(1, 1, 0),
        Size = UDim2.new(0, 150, 0, 50)
    },
    ["Mythic"] = {
        Color = Color3.new(1, 0, 0),
        Size = UDim2.new(0, 150, 0, 50)
    },
    ["Brainrot God"] = {
        Color = Color3.new(0.5, 0, 0.5),
        Size = UDim2.new(0, 180, 0, 60)
    },
    ["Secret"] = {
        Color = Color3.new(0, 0, 0),
        Size = UDim2.new(0, 200, 0, 70)
    }
}

local MutationSettings = {
    ["Gold"] = {
        Color = Color3.fromRGB(255, 215, 0),
        Size = UDim2.new(0, 120, 0, 30)
    },

    ["Diamond"] = {
        Color = Color3.fromRGB(0, 191, 255),
        Size = UDim2.new(0, 120, 0, 30)
    },

    ["Rainbow"] = {
        Color = Color3.fromRGB(255, 192, 203),
        Size = UDim2.new(0, 120, 0, 30)
    },

    ["Bloodrot"] = {
        Color = Color3.fromRGB(139, 0, 0),
        Size = UDim2.new(0, 120, 0, 30)
    }
}

local activeESP = {}
local activeLockTimeEsp = false
local lteInstances = {}

local function updatelock()
    if not activeLockTimeEsp then
        for _, instance in pairs(lteInstances) do
            if instance then
                instance:Destroy()
            end
        end
        lteInstances = {}
        return
    end

    for _, plot in pairs(workspace.Plots:GetChildren()) do
        local timeLabel = plot:FindFirstChild("Purchases", true) and 
        plot.Purchases:FindFirstChild("PlotBlock", true) and
        plot.Purchases.PlotBlock.Main:FindFirstChild("BillboardGui", true) and
        plot.Purchases.PlotBlock.Main.BillboardGui:FindFirstChild("RemainingTime", true)
        
        if timeLabel and timeLabel:IsA("TextLabel") then
            local espName = "LockTimeESP_" .. plot.Name
            local existingBillboard = plot:FindFirstChild(espName)
            
            local isUnlocked = timeLabel.Text == "0s"
            local displayText = isUnlocked and "Unlocked" or ("Lock: " .. timeLabel.Text)
            
            local textColor
            if plot.Name == plotName then
                textColor = isUnlocked and Color3.fromRGB(0, 255, 0)
                            or Color3.fromRGB(0, 255, 0)
            else
                textColor = isUnlocked and Color3.fromRGB(220, 20, 60)
                            or Color3.fromRGB(255, 255, 0)
            end
            
            if not existingBillboard then
                local billboard = Instance.new("BillboardGui")
                billboard.Name = espName
                billboard.Size = UDim2.new(0, 200, 0, 30)
                billboard.StudsOffset = Vector3.new(0, 5, 0)
                billboard.AlwaysOnTop = true
                billboard.Adornee = plot.Purchases.PlotBlock.Main
                
                local label = Instance.new("TextLabel")
                label.Text = displayText
                label.Size = UDim2.new(1, 0, 1, 0)
                label.BackgroundTransparency = 1
                label.TextScaled = true
                label.TextColor3 = textColor
                label.TextStrokeColor3 = Color3.new(0, 0, 0)
                label.TextStrokeTransparency = 0
                label.Font = Enum.Font.SourceSansBold
                label.Parent = billboard
                
                billboard.Parent = plot
                lteInstances[plot.Name] = billboard
            else
                existingBillboard.TextLabel.Text = displayText
                existingBillboard.TextLabel.TextColor3 = textColor
            end
        end
    end
end

local function updateRESP()
    for _, plot in pairs(workspace.Plots:GetChildren()) do
        if plot.Name ~= plotName then
            for _, child in pairs(plot:GetDescendants()) do
                if child.Name == "Rarity" and child:IsA("TextLabel") and RaritySettings[child.Text] then
                    local parentModel = child.Parent.Parent
                    local espName = child.Text.."_ESP"
                    local mutationEspName = "Mutation_ESP"
                    local existingBillboard = parentModel:FindFirstChild(espName)
                    local existingMutationBillboard = parentModel:FindFirstChild(mutationEspName)
                    
                    if activeESP[child.Text] then
                        if not existingBillboard then
                            local settings = RaritySettings[child.Text]
                            
                            local billboard = Instance.new("BillboardGui")
                            billboard.Name = espName
                            billboard.Size = settings.Size
                            billboard.StudsOffset = Vector3.new(0, 3, 0)
                            billboard.AlwaysOnTop = true
                            
                            local label = Instance.new("TextLabel")
                            label.Text = child.Parent.DisplayName.Text
                            label.Size = UDim2.new(1, 0, 1, 0)
                            label.BackgroundTransparency = 1
                            label.TextScaled = true
                            label.TextColor3 = settings.Color
                            label.TextStrokeColor3 = Color3.new(0, 0, 0)
                            label.TextStrokeTransparency = 0
                            label.Font = Enum.Font.SourceSansBold
                            
                            label.Parent = billboard
                            billboard.Parent = parentModel
                        end
                        
                        local mutation = child.Parent:FindFirstChild("Mutation")
                        if mutation and mutation:IsA("TextLabel") and MutationSettings[mutation.Text] then
                            local mutationSettings = MutationSettings[mutation.Text]
                            
                            if not existingMutationBillboard then
                                local mutationBillboard = Instance.new("BillboardGui")
                                mutationBillboard.Name = mutationEspName
                                mutationBillboard.Size = mutationSettings.Size
                                mutationBillboard.StudsOffset = Vector3.new(0, 6, 0)
                                mutationBillboard.AlwaysOnTop = true
                                mutationBillboard.Adornee = parentModel:FindFirstChildOfClass("Part") or parentModel
                                
                                local mutationLabel = Instance.new("TextLabel")
                                mutationLabel.Text = mutation.Text
                                mutationLabel.Size = UDim2.new(1, 0, 1, 0)
                                mutationLabel.BackgroundTransparency = 1
                                mutationLabel.TextScaled = true
                                mutationLabel.TextColor3 = mutationSettings.Color
                                mutationLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
                                mutationLabel.TextStrokeTransparency = 0
                                mutationLabel.Font = Enum.Font.SourceSansBold
                                
                                mutationLabel.Parent = mutationBillboard
                                mutationBillboard.Parent = parentModel
                            else
                                existingMutationBillboard.TextLabel.Text = mutation.Text
                                existingMutationBillboard.TextLabel.TextColor3 = mutationSettings.Color
                            end
                        elseif existingMutationBillboard then
                            existingMutationBillboard:Destroy()
                        end
                    else
                        if existingBillboard then
                            existingBillboard:Destroy()
                        end
                        if existingMutationBillboard then
                            existingMutationBillboard:Destroy()
                        end
                    end
                end
            end
        end
    end
end

local Toggle = Tabs.Esp:AddToggle({Name = "ESP Players", Description = "Show player names above their heads", Default = false})
Toggle:Callback(function(Value)
    toggleESP(Value)
end)

local Toggle = Tabs.Esp:AddToggle({Name = "ESP Lock Time", Description = "Show plot lock timers", Default = false})
Toggle:Callback(function(Value)
    activeLockTimeEsp = Value
    updatelock()
end)
Tabs.Esp:AddSection({"Brainrot Normal"})
local Toggle = Tabs.Esp:AddToggle({Name = "ESP Legendary", Description = "Highlight legendary items", Default = false})
Toggle:Callback(function(Value)
    activeESP["Legendary"] = Value
    updateRESP()
end)

local Toggle = Tabs.Esp:AddToggle({Name = "ESP Mythic", Description = "Highlight mythic items", Default = false})
Toggle:Callback(function(Value)
    activeESP["Mythic"] = Value
    updateRESP()
end)

Tabs.Esp:AddSection({"Brainrot Exteme"})

local Toggle = Tabs.Esp:AddToggle({Name = "ESP Brainrot God", Description = "Highlight brainrot god items", Default = false})
Toggle:Callback(function(Value)
    activeESP["Brainrot God"] = Value
    updateRESP()
end)

local Toggle = Tabs.Esp:AddToggle({Name = "ESP Secret", Description = "Highlight secret items", Default = false})
Toggle:Callback(function(Value)
    activeESP["Secret"] = Value
    updateRESP()
end)

task.spawn(function()
    while true do
        task.wait(0.25)
        if activeLockTimeEsp then
            updatelock()
        end
        if next(activeESP) ~= nil then
            updateRESP()
        end
    end
end)

--[[Tabs.Main:AddKeybind("Keybind", {
    Title = "Steal Keybind",
    Mode = "Toggle",
    Default = "G",
    Callback = function(Value)
        local player = game.Players.LocalPlayer
        local pos = CFrame.new(0, -500, 0)
        local startT = os.clock()
        while os.clock() - startT < 1 do
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                player.Character.HumanoidRootPart.CFrame = pos
            end
            task.wait()
        end
    end,
})

Tabs.Main:AddKeybind("Keybind", {
    Title = "Shop",
    Mode = "Toggle",
    Default = "F",
    Description = "Opens/Closes shop",
    Callback = function(Value)
        shop.Visible = Value
        shop.Position = Value and UDim2.new(0.5, 0, 0.5, 0) or UDim2.new(0.5, 0, 1.5, 0)
    end,
})]]
-- SCRIPT

Tabs.Script:AddSection({"Scripts Op"})
Tabs.Script:AddButton({"Chilli Hub", function()
  loadstring(game:HttpGet("https://api.luarmor.net/files/v3/loaders/a3e13a4a85ac4c2da17a6baab051ee1b.lua"))()
end})
Tabs.Script:AddButton({"Lennon Hub ", function()
loadstring(game:HttpGet("https://pastefy.app/NU4lqGZe/raw"))()
end})
Tabs.Script:AddButton({"Miranda Hub", function()
  loadstring(game:HttpGet("https://pastefy.app/9YIyWc7E/raw"))()
end})

-- SERVER

local petModels = game:GetService("ReplicatedStorage").Models.Animals:GetChildren()

local petNames = {}
for _, pet in ipairs(petModels) do
    table.insert(petNames, pet.Name)
end
local SelectedPets = {}
local isRunning = false
local lnt = 0
local nc = 5

local function getOwner(plot)
    local text = plot:FindFirstChild("PlotSign") and 
    plot.PlotSign:FindFirstChild("SurfaceGui") and 
    plot.PlotSign.SurfaceGui.Frame.TextLabel.Text or "Unknown"
    return text:match("^(.-)'s Base") or text
end

local myPlotName
for _, plot in ipairs(workspace.Plots:GetChildren()) do
    if plot:FindFirstChild("YourBase", true).Enabled then
        myPlotName = plot.Name
        break
    end
end


local MultiDropdown = Tabs.Server:AddDropdown({
  Name = "Pet Finder",
  Description = "",
  Options = petNames,
  Default = "Pets",
  Flag = "",
  Callback = function()
    SelectedPets = {}
    for petName, isSelected in pairs(SelectedPetss) do
        if isSelected then
            table.insert(SelectedPets, petName)
        end
    end
    
    if not isRunning and #SelectedPets > 0 then
        isRunning = true
        task.spawn(function()
            local lastResults = {}
            
            while #SelectedPets > 0 do
                local counts = {}
                local found = false
                local newPetsFound = false
                
                for _, plot in pairs(workspace.Plots:GetChildren()) do
                    if plot.Name ~= myPlotName then
                        local owner = getOwner(plot)
                        for _, v in pairs(plot:GetDescendants()) do
                            if v.Name == "DisplayName" and table.find(SelectedPets, v.Text) then
                                counts[owner] = counts[owner] or {}
                                counts[owner][v.Text] = (counts[owner][v.Text] or 0) + 1
                                found = true
                                
                                if not lastResults[owner] or not lastResults[owner][v.Text] then
                                    newPetsFound = true
                                end
                            end
                        end
                    end
                end
                
                if found then
                    local resultText = ""
                    for owner, pets in pairs(counts) do
                        for name, count in pairs(pets) do
                            resultText = resultText .. name.." x"..count.." | Owner: "..owner.."\n"
                            
                            if newPetsFound and (os.time() - lnt) > nc then
                                redzlib:Notify({
                            	Title = "Pet Finder",
                            	Description = "Found "..name.." x"..count.." Owner: "..owner,
                            	Type = "Success",
                            	Description2
                            })
                                lnt = os.time()
                            end
                        end
                    end
                    Rparagraph:SetTitle(resultText)
                else
                    Rparagraph:SetTitle("No selected pets found")
                end
                
                lastResults = counts
                task.wait(0.5)
            end
            
            isRunning = false
            Rparagraph:SetTitle("No pets selected")
        end)
    elseif #SelectedPets == 0 then
        Rparagraph:SetTitle("No pets selected")
    end
  end
})

local Rparagraph = Tabs.Server:AddParagraph({
    Title = "No pets selected",
})

Tabs.Server:AddSection("Other")


Tabs.Server:AddButton({
    Title = "Server Hop",
    Description = "Joins a Different Server",
    Callback = function()
        local PlaceID = game.PlaceId
        local AllIDs = {}
        local foundAnything = ""
        local actualHour = os.date("!*t").hour
        local Deleted = false
        local File = pcall(function()
            AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
        end)
        if not File then
            table.insert(AllIDs, actualHour)
            writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
        end
        function TPReturner()
            local Site;
            if foundAnything == "" then
                Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
            else
                Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
            end
            local ID = ""
            if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
                foundAnything = Site.nextPageCursor
            end
            local num = 0;
            for _,v in pairs(Site.data) do
                local Possible = true
                ID = tostring(v.id)
                if tonumber(v.maxPlayers) > tonumber(v.playing) then
                    for _,Existing in pairs(AllIDs) do
                        if num ~= 0 then
                            if ID == tostring(Existing) then
                                Possible = false
                                end
                            else
                                if tonumber(actualHour) ~= tonumber(Existing) then
                                    local delFile = pcall(function()
                                        delfile("NotSameServers.json")
                                        AllIDs = {}
                                        table.insert(AllIDs, actualHour)
                                        end)
                                    end
                                end
                            num = num + 1
                        end
                    if Possible == true then
                        table.insert(AllIDs, ID)
                        task.wait()
                        pcall(function()
                            writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                            task.wait()
                            game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                        end)
                task.wait(4)
            end
        end
    end
end
function Teleport()
    while task.wait() do
        pcall(function()
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
    end
end
Teleport()
    end
})

Tabs.Server:AddButton({
    Title = "Rejoin",
    Description = "Rejoins The Same Server",
    Callback = function()
        local ts = game:GetService("TeleportService")
        local p = game:GetService("Players").LocalPlayer
        ts:TeleportToPlaceInstance(game.PlaceId, game.JobId, p)
    end
})

Tabs.Updates:AddSection({("Team")})
local Timer = Tabs.Updates:AddParagraph({ Title = "Time: 00:00:00" })
local st = os.time()

task.spawn(function()
    while true do
        local et = os.difftime(os.time(), st)
        Timer:SetTitle(string.format("Time: %02d:%02d:%02d", math.floor(et / 3600), math.floor((et % 3600) / 60), et % 60))
        task.wait(1)
    end
end)

Tabs.Updates:AddButton({
    Title = "Discord Server",
    Description = "Copies Discord Invite Link",
    Callback = function()
        setclipboard("")
    end
})

game:GetService('Players').LocalPlayer.Idled:Connect(function()
    game:GetService('VirtualUser'):CaptureController()
    game:GetService('VirtualUser'):ClickButton2(Vector2.new())
end)
Tabs.Settings:AddSection({("Anti <BetaTeste")})
local Toggle = Tabs.Settings:AddToggle({
    Name = "Anti-Remote Hook",
    Description = "Intercepta RemoteEvents suspeitos <beta>",
    Default = true
})

Toggle:Callback(function(Value)
    if Value then
        local scanned = {}
        local ReplicatedStorage = cloneref(game:GetService("ReplicatedStorage"))
        local Players = cloneref(game:GetService("Players"))
        local FindFunc = loadstring(game:HttpGet("https://raw.githubusercontent.com/Awakenchan/GcViewerV2/refs/heads/main/Utility/FindFunction.lua"))()
        local Class, Default = loadstring(game:HttpGet("https://raw.githubusercontent.com/Awakenchan/GcViewerV2/refs/heads/main/Utility/Data2Code%40Amity.lua"))()
        getgenv().Log = getgenv().Log or function(...) print(...) end

        local PlayerName = Players.LocalPlayer.Name

        local function hookRemote(remote)
            if remote:IsA("RemoteEvent") then
                local oldFire
                oldFire = hookfunction(remote.FireServer, function(self, ...)
                    local args = {...}
                    if args[1] and (tostring(args[1]):lower() == "x-15" or tostring(args[1]) == "x-16") then
                        return task.wait(9e9)
                    end
                    return oldFire(self, unpack(args))
                end)
            end
        end

        local function isRemote(obj)
            return typeof(obj) == "Instance" and obj:IsA("RemoteEvent")
        end

        local function deepScan(value)
            if scanned[value] then return end
            scanned[value] = true
            if isRemote(value) then
                if not value:IsDescendantOf(ReplicatedStorage) then
                    hookRemote(value)
                    local Old
                    Old = hookfunction(getrenv().coroutine.wrap, function(...)
                        if not checkcaller() then
                            print(..., getfenv(2).script)
                            return task.wait(9e9)
                        end
                        return Old(...)
                    end)
                end
                return
            end
            if typeof(value) == "function" then
                for _, v in pairs(getupvalues(value)) do
                    deepScan(v)
                end
            end
            if typeof(value) == "table" then
                for _, v in pairs(value) do
                    deepScan(v)
                end
            end
        end

        for _, obj in next, getgc(true) do
            if typeof(obj) == "function" and islclosure(obj) and not isexecutorclosure(obj) then
                deepScan(obj)
            end
        end
    end
end)
local Toggle = Tabs.Settings:AddToggle({
    Name = "Anti-ObserveTag",
    Description = "Desativa funções de rastreamento (observeTag)",
    Default = true
})

Toggle:Callback(function(Value)
    if Value then
        local hk = false
        for _, v in pairs(getgc(true)) do
            if typeof(v) == "table" then
                local fn = rawget(v, "observeTag")
                if typeof(fn) == "function" and not hk then
                    hk = true
                    hookfunction(fn, newcclosure(function(_, _)
                        return {
                            Disconnect = function() end,
                            disconnect = function() end
                        }
                    end))
                end
            end
        end
    end
end)
local Toggle = Tabs.Settings:AddToggle({
    Name = "Anti-Kick",
    Description = "Impede que você seja expulso automaticamente",
    Default = false
})

Toggle:Callback(function(Value)
    if Value then
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Mjajas/ANTII/refs/heads/main/antikick.lua"))()
    end
end)